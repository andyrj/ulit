{"version":3,"file":"ulit.js","sourceRoot":"","sources":["src/Disposable.ts","src/common.ts","src/Template.ts","src/Part.ts","src/ulit.ts","src/directives.ts","src/predicates.ts","src/DomTarget.ts"],"names":[],"mappings":"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","sourcesContent":["export type IDisposer = () => void;\nexport class Disposable {\n  public disposers: IDisposer[] = [];\n  constructor() {}\n  public addDisposer(handler: IDisposer) {\n    const disposers = this.disposers;\n    if (disposers.indexOf(handler) > -1) {\n      return;\n    }\n    disposers.push(handler);\n  }\n  public removeDisposer(handler: IDisposer) {\n    const disposers = this.disposers;\n    const index = disposers.indexOf(handler);\n    if (index === -1) {\n      return;\n    }\n    disposers.splice(index, 1);\n  }\n  public dispose() {\n    const disposers = this.disposers;\n    while (disposers.length > 0) {\n      (disposers.pop() as IDisposer)();\n    }\n  }\n}\n","export type Optional<T> = T | undefined | null;\nexport const SVG = \"SVG\";\nexport const SVG_NS = \"http://www.w3.org/2000/svg\";\nexport const FOREIGN_OBJECT = \"FOREIGNOBJECT\";\nexport const PART_START = \"{{\";\nexport const PART_END = \"}}\";\nexport const PART = \"part\";\nexport const SERIAL_PART_START = `${PART_START}${PART}s:`;\nexport const PART_MARKER = `${PART_START}${PART_END}`;\nexport const TEMPLATE = \"template\";\nexport const DIRECTIVE = \"directive\";\nexport const ULIT = \"ulit\";\nexport const ELEMENT_NODE = 1;\nexport const TEXT_NODE = 3;\nexport const COMMENT_NODE = 8;\nexport const DOCUMENT_FRAGMENT = 11;\nexport const EMPTY_STRING = \"\";\n\nexport function fail(msg?: Optional<string>): never {\n  if (msg) {\n    throw new RangeError(msg);\n  } else {\n    throw new RangeError();\n  }\n}\n\nexport type WalkFn = (\n  parent: Node,\n  element: Optional<Node>,\n  path: Array<string | number>\n) => boolean;\n\nexport function walkDOM(\n  parent: HTMLElement | DocumentFragment,\n  element: Optional<Node>,\n  fn: WalkFn,\n  path: Array<number | string> = []\n) {\n  let condition = true;\n  if (element) {\n    condition = fn(parent, element, path);\n  } else {\n    element = parent;\n  }\n  if (!condition || !element) {\n    fail();\n  }\n  [].forEach.call(element.childNodes, (child: Node, index: number) => {\n    path.push(index);\n    walkDOM(element as HTMLElement, child, fn, path);\n    path.pop();\n  });\n}\n\nconst idCache = new Map<string, number>();\nexport function getId(str: string): number {\n  if (idCache.has(str)) {\n    return idCache.get(str) as number;\n  }\n  let id = 0;\n  if (str.length > 0) {\n    for (let i = 0; i < str.length; i++) {\n      const char = str.charCodeAt(i);\n      id = (id << 5) - id + char;\n      id = id & id;\n    }\n  }\n  idCache.set(str, id);\n  return id;\n}\n","import {\n  COMMENT_NODE,\n  fail,\n  FOREIGN_OBJECT,\n  Optional,\n  PART_MARKER,\n  SERIAL_PART_START,\n  SVG,\n  ULIT,\n  WalkFn\n} from \"./common\";\nimport { Disposable } from \"./Disposable\";\nimport { DomTarget } from \"./DomTarget\";\nimport { Part, PartValue } from \"./Part\";\nimport { isElementNode, isNumber, isString, isText } from \"./predicates\";\n\nexport interface ISerialCacheEntry {\n  template: HTMLTemplateElement;\n  serializedParts: ISerializedPart[];\n}\nexport type ISerializedPart = [Array<string | number>, boolean];\nexport interface ITemplateGenerator {\n  (values?: PartValue[]): Template;\n  id: number;\n  exprs: PartValue[];\n}\nfunction isNodeSVGChild(node: Optional<Node>): boolean {\n  if (!node) {\n    return false;\n  }\n  let result = false;\n  let current: Optional<Node> = node;\n  while (current) {\n    if (current.nodeName === SVG) {\n      result = true;\n      current = undefined;\n    } else if (current.nodeName === FOREIGN_OBJECT) {\n      result = false;\n      current = undefined;\n    } else {\n      current = current.parentNode;\n    }\n  }\n  return result;\n}\nfunction isFirstChildSerial(parent: DocumentFragment): boolean {\n  const child = parent.firstChild;\n  return (child &&\n    child.nodeType === COMMENT_NODE &&\n    child.nodeValue &&\n    child.nodeValue.startsWith(SERIAL_PART_START)) as boolean;\n}\n\nfunction parseSerializedParts(value?: string): ISerializedPart[] {\n  if (!value) {\n    return [];\n  } else {\n    return JSON.parse(\n      value.split(SERIAL_PART_START)[1].slice(0, -2)\n    ) as ISerializedPart[];\n  }\n}\n\nfunction getSerializedTemplate(id: number): Optional<ISerialCacheEntry> {\n  const el = document.getElementById(`${ULIT}${id}`) as HTMLTemplateElement;\n  if (!el) {\n    return;\n  }\n  const fragment = (el.cloneNode(true) as HTMLTemplateElement).content;\n  if (!fragment) {\n    return;\n  }\n  const first = fragment.firstChild;\n  if (!first) {\n    return;\n  }\n  const isFirstSerial = isFirstChildSerial(fragment);\n  let deserialized: Optional<ISerialCacheEntry> = undefined;\n  if (isFirstSerial) {\n    const fc = fragment.removeChild(first);\n    const serializedParts = parseSerializedParts(fc.nodeValue || undefined);\n    const template = el as HTMLTemplateElement;\n    if (serializedParts && template) {\n      deserialized = { template, serializedParts };\n    }\n  }\n  if (deserialized) {\n    return deserialized;\n  }\n  return;\n}\nexport function templateSetup(\n  serial: ISerializedPart[],\n  parts: Part[]\n): WalkFn {\n  return (parent, element, walkPath) => {\n    const isSVG = isNodeSVGChild(element);\n    if (isText(element)) {\n      const text = element && element.nodeValue;\n      const split = text && text.split(PART_MARKER);\n      const end = split ? split.length - 1 : undefined;\n      const nodes: Node[] = [];\n      let cursor = 0;\n      if (split && split.length > 0 && end) {\n        split.forEach((node, i) => {\n          if (node !== \"\") {\n            nodes.push(document.createTextNode(node));\n            cursor++;\n          }\n          if (i < end) {\n            const newPartComment = document.createComment(PART_MARKER);\n            nodes.push(newPartComment);\n            const adjustedPath = walkPath.slice(0);\n            const len = adjustedPath.length - 1;\n            (adjustedPath[len] as number) += cursor;\n            serial.push([adjustedPath, isSVG]);\n            parts.push(\n              new Part(adjustedPath, newPartComment, parts.length, isSVG)\n            );\n            cursor++;\n          }\n        });\n        nodes.forEach(node => {\n          parent.insertBefore(node, element as Node);\n        });\n        if (!element) {\n          fail();\n        } else {\n          parent.removeChild(element);\n        }\n      }\n    } else if (isElementNode(element)) {\n      if (!element) {\n        fail();\n      } else {\n        [].forEach.call(element.attributes, (attr: Attr) => {\n          if (attr.nodeValue === PART_MARKER) {\n            const attrPath = walkPath.concat(attr.nodeName);\n            serial.push([attrPath, isSVG]);\n            parts.push(new Part(attrPath, element, parts.length, isSVG));\n          }\n        });\n      }\n    }\n    return true;\n  };\n}\nexport type NodeAttribute = [Node, string];\nexport function followPath(\n  target: Node,\n  pointer: Array<string | number>\n): Optional<Node | NodeAttribute> | never {\n  if (!target) {\n    throw new RangeError();\n  }\n  const cPath = pointer.slice(0);\n  const current = cPath.shift() as string | number;\n  if (isNumber(current)) {\n    if (cPath.length === 0) {\n      return target.childNodes[current];\n    } else {\n      return followPath(target.childNodes[current], cPath);\n    }\n  } else if (isString(current)) {\n    if (cPath.length === 0) {\n      return [target, current];\n    } else {\n      fail();\n    }\n  }\n  fail();\n  return; // satisifying typescript, can't be reached anyways... ><\n}\n\nexport class Template {\n  public disposable = new Disposable();\n  public target = new DomTarget();\n  constructor(\n    public id: number,\n    public element: HTMLTemplateElement,\n    public parts: Part[],\n    public values: PartValue[]\n  ) {}\n  public hydrate(element: Node) {\n    this.parts.forEach(part => {\n      const target = followPath(element, part.path);\n      if (!target) {\n        fail();\n      } else {\n        const isArr = Array.isArray(target);\n        this.target.start = isArr\n          ? (target as [Node, string][0])\n          : (target as Node);\n        // this.target.end = isArr ? target as [Node, string][0]: target as Node;\n      }\n    });\n  }\n  public update(newValues?: Optional<PartValue[]>) {\n    if (arguments.length === 0) {\n      newValues = this.values;\n    }\n    const templateParts = this.parts as Part[];\n    let i = 0;\n    const len = templateParts.length;\n    for (; i < len; i++) {\n      const part = templateParts[i];\n      const newVal = newValues ? newValues[i] : undefined;\n      part.update(newVal);\n    }\n    if (newValues != null) {\n      this.values = newValues;\n    }\n  }\n}\n","import {\n  EMPTY_STRING,\n  fail,\n  Optional,\n  PART_END,\n  PART_START,\n  SVG_NS\n} from \"./common\";\nimport { IDirective, repeat } from \"./directives\";\nimport { Disposable } from \"./Disposable\";\nimport { DomTarget } from \"./DomTarget\";\nimport {\n  isAttributePart,\n  isDirective,\n  isDocumentFragment,\n  isEventPart,\n  isFunction,\n  isIterable,\n  isNode,\n  isPromise,\n  isString,\n  isTemplate,\n  isTemplateElement,\n  isTemplateGenerator,\n  isText\n} from \"./predicates\";\nimport { ITemplateGenerator, Template } from \"./Template\";\n\nexport type Key = symbol | string | number;\nexport type PrimitivePart =\n  | boolean\n  | number\n  | string\n  | Node\n  | DocumentFragment\n  | Function;\nexport type PartValue =\n  | PrimitivePart\n  | IPartPromise\n  | IDirective\n  | IPartArray\n  | ITemplateGenerator;\nexport interface IPartPromise extends Promise<PartValue> {}\nexport interface IPartArray extends Array<PartValue> {}\nexport type KeyFn = (item: any, index?: number) => Key;\nexport type TemplateFn = (item: any) => ITemplateGenerator;\n\nexport class Part {\n  public value: PartValue | Template;\n  public path: Array<string | number>;\n  public disposable = new Disposable();\n  public target: DomTarget;\n  constructor(\n    path: Array<string | number>,\n    target: Node,\n    index: number = -1,\n    public isSVG: boolean = false\n  ) {\n    this.target = new DomTarget(target);\n    this.path = path.slice(0);\n    this.value = target;\n  }\n  public update(value?: PartValue) {\n    if (arguments.length === 0 && !isTemplate(this.value)) {\n      value = this.value;\n    }\n    if (isDirective(value)) {\n      (value as IDirective)(this);\n      return;\n    }\n    if (isPromise(value)) {\n      (value as Promise<PartValue>).then(promised => {\n        this.update(promised);\n      });\n      return;\n    }\n    if (isAttributePart(this)) {\n      this.updateAttribute(this, value);\n    } else {\n      if (isIterable(value)) {\n        value = Array.from(value as any);\n      }\n      if (Array.isArray(value)) {\n        this.updateArray(this, value);\n      }\n      if (isTemplateGenerator(value)) {\n        this.updateTemplate(this, value as ITemplateGenerator);\n      } else {\n        this.updateNode(this, value);\n      }\n    }\n  }\n  private updateAttribute(part: Part, value: Optional<PartValue>) {\n    const element = part.target.start as Node;\n    if (!element) {\n      fail();\n    }\n    const name = part.path[part.path.length - 1] as string;\n    const isSVG = part.isSVG;\n    if (!name) {\n      fail();\n    }\n    const isValFn = isFunction(value);\n    if ((isEventPart(part) && isValFn) || (name in element && !isSVG)) {\n      try {\n        (element as any)[name] =\n          !value && value !== false ? EMPTY_STRING : value;\n      } catch (_) {} // eslint-disable-line\n    }\n    if (!isValFn) {\n      if (!value) {\n        if (isSVG) {\n          (element as HTMLElement).removeAttributeNS(SVG_NS, name);\n        } else {\n          (element as HTMLElement).removeAttribute(name);\n        }\n      } else {\n        if (isSVG) {\n          (element as HTMLElement).setAttributeNS(\n            SVG_NS,\n            name,\n            value as string\n          );\n        } else {\n          (element as HTMLElement).setAttribute(name, value as string);\n        }\n      }\n    }\n  }\n\n  private updateArray(part: Part, value: Optional<PartValue[]>) {\n    if (!value) {\n      return;\n    }\n    const directive = repeat(value);\n    part.value = directive;\n    return directive(part);\n  }\n\n  private updateTemplate(part: Part, value: ITemplateGenerator) {\n    const first = part.target.first();\n    const parent = first.parentNode;\n    if (!parent) {\n      fail();\n    }\n    const instance = isTemplate(part.value) ? part.value : undefined;\n    if (instance && (instance as Template).id === value.id) {\n      (instance as Template).update(value.exprs);\n      return;\n    }\n    const template = value();\n    if (isTemplateElement(template.element)) {\n      const fragment = template.element.content;\n      const newStart = template.target.first();\n      const newEnd = template.target.last();\n      (parent as Node).insertBefore(fragment, first);\n      part.target.start = newStart;\n      part.target.end = newEnd;\n      part.value = template;\n    } else {\n      fail();\n    }\n  }\n\n  private updateNode(part: Part, value: Optional<PartValue>) {\n    // Error condition: isText(part.value) && isNode(value) -> doesn't remove the text node...\n    if (value == null) {\n      value = document.createComment(`${PART_START}${PART_END}`);\n    }\n    const first = part.target.first();\n    const parent = first.parentNode;\n    if (parent == null) {\n      fail();\n    }\n    let newStart: Optional<Node> = undefined;\n    let newEnd: Optional<Node> = undefined;\n    const partValue = part.value;\n    if (!isNode(value)) {\n      // string or coerce to string\n      value =\n        !isString(value) && isFunction(value.toString)\n          ? value.toString()\n          : value;\n      if (!isString(value)) {\n        fail();\n      }\n      if (isText(partValue)) {\n        if (partValue.nodeValue !== value) {\n          partValue.nodeValue = value as string;\n        }\n      } else {\n        value = document.createTextNode(value as string);\n        newStart = value;\n        newEnd = value;\n      }\n    }\n    if (!isNode(value)) {\n      fail();\n    }\n    if (value !== partValue) {\n      if (!isText(value)) {\n        const isFrag = isDocumentFragment(value);\n        newStart = isFrag ? (value as Node).firstChild : (value as Node);\n        newEnd = isFrag ? (value as Node).lastChild : (value as Node);\n      }\n      // TODO: figure out why it's removing the wrong nodes here...\n      (parent as Node).insertBefore(value as Node, first);\n      // part.remove();\n      part.value = value;\n      // part.start = newStart;\n      // part.end = newEnd;\n    }\n  }\n}\n","import {\n  fail,\n  getId,\n  Optional,\n  PART_MARKER,\n  TEMPLATE,\n  walkDOM\n} from \"./common\";\nimport { defaultTemplateFn } from \"./directives\";\nimport { Part, PartValue } from \"./Part\";\nimport {\n  isIterable,\n  isPartComment,\n  isTemplateElement,\n  isTemplateGenerator\n} from \"./predicates\";\nimport { ITemplateGenerator, Template, templateSetup } from \"./Template\";\n\nexport function html(\n  strings: TemplateStringsArray,\n  ...expressions: PartValue[]\n): ITemplateGenerator {\n  const id = getId(strings.toString());\n  const markUp = strings.join(PART_MARKER);\n  const factory = function(exprs: PartValue[]) {\n    const templateGenerator = function() {\n      const templateElement = document.createElement(\n        TEMPLATE\n      ) as HTMLTemplateElement;\n      templateElement.innerHTML = markUp;\n      const fragment = templateElement.content;\n      // serial = {\n      //   serializedParts: [],\n      //   template: newTemplateEl.cloneNode() as HTMLTemplateElement\n      // };\n      const parts: Part[] = [];\n      const serializedParts: Array<[Array<string | number>, boolean]> = [];\n      walkDOM(fragment, undefined, templateSetup(serializedParts, parts));\n      return new Template(id, templateElement, parts, exprs);\n    };\n    (templateGenerator as ITemplateGenerator).id = id;\n    (templateGenerator as ITemplateGenerator).exprs = expressions;\n    return templateGenerator as ITemplateGenerator;\n  };\n  return factory(expressions);\n}\n\nexport function render(\n  view: PartValue | PartValue[] | Iterable<PartValue>,\n  container?: Optional<Node>\n) {\n  if (!container) {\n    container = document.body;\n  }\n  if (isIterable(view)) {\n    view = Array.from(view as any);\n  }\n  if (!isTemplateGenerator(view)) {\n    view = defaultTemplateFn(view as PartValue);\n    if (!isTemplateGenerator(view)) {\n      fail();\n    }\n  }\n  const instance = (container as any).__template;\n  // TODO: re-write with expanded if structure nested here for id test...\n  if (instance) {\n    if (instance.id === (view as ITemplateGenerator).id) {\n      instance.update((view as ITemplateGenerator).exprs);\n      return;\n    } else {\n      instance.remove();\n      (container as any).__template = undefined;\n    }\n  }\n  const template = (view as ITemplateGenerator)(\n    (view as ITemplateGenerator).exprs\n  );\n\n  if (container.hasChildNodes()) {\n    // TODO: add hydration here...\n  } else {\n    template.update();\n    if (isTemplateElement(template.element)) {\n      const first: Optional<Node> = container.firstChild;\n      const parent: Optional<Node> = container;\n      const fragment = template.element.content;\n      const fragmentFirst = fragment.firstChild;\n      const fragmentLast = fragment.lastChild;\n      const newStart = isPartComment(fragmentFirst)\n        ? template.parts[0]\n        : fragmentFirst;\n      const newEnd = isPartComment(fragmentLast)\n        ? template.parts[template.parts.length - 1]\n        : fragmentLast;\n      (parent as Node).insertBefore(fragment, first);\n      template.target.start = newStart;\n      template.target.end = newEnd;\n      (container as any).__template = template;\n    } else {\n      fail();\n    }\n  }\n}\n","import { DIRECTIVE, fail } from \"./common\";\nimport { isTemplate, isTemplateElement } from \"./predicates\";\nimport {\n  html,\n  ITemplateGenerator,\n  Key,\n  KeyFn,\n  Part,\n  PartValue,\n  Template,\n  TemplateFn\n} from \"./ulit\";\n\nexport interface IDirective {\n  (part: Part): void;\n  kind: string;\n}\n\nexport type DirectiveFn = (part: Part) => void;\nexport function Directive(fn: DirectiveFn): IDirective {\n  (fn as any).kind = DIRECTIVE;\n  return fn as IDirective;\n}\n\nexport function defaultKeyFn(index: number): Key {\n  return index;\n}\n\nexport function defaultTemplateFn(item: PartValue): ITemplateGenerator {\n  return html`${item}`;\n}\nconst repeatCache = new Map<Part, [Key[], Map<Key, Template>]>();\nexport function repeat(\n  items: Array<{}>,\n  keyFn: KeyFn = defaultKeyFn,\n  templateFn: TemplateFn = defaultTemplateFn\n): IDirective {\n  return Directive((part: Part) => {\n    const target = part.first();\n    const parent = target.parentNode;\n    if (!parent) {\n      fail();\n    }\n    // const isSVG = part.isSVG;\n    // might need for hydrate...\n    // const attacher = partAttachers.get(part);\n    const templates = items.map(item => {\n      if (isTemplate(item)) {\n        return item;\n      }\n      return templateFn(item);\n    }) as Template[];\n    const keys = items.map((item, index) => keyFn(item, index));\n    const [oldCacheOrder, oldCacheMap] = repeatCache.get(part) || [\n      [],\n      new Map<Key, Template>()\n    ];\n    const newCache = [keys, new Map<Key, Template>()];\n    const newCacheMap = newCache[1] as Map<Key, Template>;\n    // build LUT for new keys/templates\n    keys.forEach((key, index) => {\n      newCacheMap.set(key, templates[index]);\n    });\n    // remove keys no longer in keys/list\n    const removeKeys: number[] = [];\n    oldCacheOrder.forEach((key, index) => {\n      const newEntry = newCacheMap.get(key);\n      const oldEntry = oldCacheMap.get(key);\n      if (oldEntry && !newEntry) {\n        oldEntry.remove();\n        oldCacheMap.delete(key);\n        removeKeys.push(index);\n      }\n    });\n    // can't mutate oldCacheOrder while in forEach\n    while (true) {\n      const index = removeKeys.pop();\n      if (index && index > -1) {\n        oldCacheOrder.splice(index, 1);\n        continue;\n      }\n      break;\n    }\n    // move/update and add\n    keys.forEach((key, index) => {\n      const oldEntry = oldCacheMap.get(key);\n      const nextTemplate = templates[index];\n      if (oldEntry) {\n        if (!parent) {\n          fail();\n        }\n        const first = oldEntry.first();\n        if (key === oldCacheOrder[index]) {\n          // update in place\n          if (oldEntry.id === nextTemplate.id) {\n            oldEntry.update(nextTemplate.values as PartValue[]);\n          } else {\n            //  maybe at some point think about diffing between templates?\n            nextTemplate.update();\n            if (isTemplateElement(nextTemplate.element)) {\n              const fragment = nextTemplate.element.content;\n              (parent as Node).insertBefore(fragment, first);\n              oldEntry.remove();\n              oldCacheMap.set(key, nextTemplate);\n            } else {\n              fail();\n            }\n          }\n        } else {\n          // TODO: look at this code again with fresh eyes...\n          // const targetEntry = oldCacheMap.get(oldCacheOrder[index]);\n          // if (!targetEntry) {\n          //   fail();\n          // } else {\n          //   target = targetEntry.first();\n          //   const oldIndex = oldCacheOrder.indexOf(key);\n          //   oldCacheOrder.splice(oldIndex, 1);\n          //   oldCacheOrder.splice(index, 0, key);\n          //   const fragment = oldEntry.remove();\n          //   if (oldEntry.id === nextTemplate.id) {\n          //     oldEntry(nextTemplate.values as PartValue[]);\n          //     (parent as Node).insertBefore(fragment, target);\n          //   } else {\n          //     nextTemplate();\n          //     // nextTemplate.insertBefore(target);\n          //     (parent as Node).insertBefore(fragment, target);\n          //   }\n          // }\n        }\n        return;\n      }\n      // add template to\n      // TODO: look over this logic and clean it up...\n      // const cursor = oldCacheOrder[index];\n      // oldEntry = oldCacheMap.get(cursor);\n      // const firstNode = part.first();\n      // if (index === 0 && isPartComment(firstNode) && !cursor && !oldEntry) {\n      //   if (isTemplateElement(nextTemplate.element)) {\n      //     const fragment = nextTemplate.element.content;\n      //     (parent as Node).insertBefore(fragment, firstNode);\n      //     if (!parent) {\n      //       fail();\n      //     } else {\n      //       parent.removeChild(firstNode);\n      //       oldCacheOrder.push(key);\n      //     }\n      //   } else {\n      //     fail();\n      //   }\n      // } else {\n      //   if (!oldEntry) {\n      //     fail();\n      //   } else {\n      //     // nextTemplate.insertBefore(oldEntry);\n      //     oldCacheOrder.splice(index, 0, key);\n      //   }\n      // }\n      // oldCacheMap.set(key, nextTemplate);\n    });\n  });\n}\n\nexport function until(\n  promise: Promise<PartValue>,\n  defaultContent: PartValue\n): IDirective {\n  return Directive((part: Part) => {\n    part.update(defaultContent);\n    promise.then(value => part.update(value));\n  });\n}\n","import {\n  COMMENT_NODE,\n  DIRECTIVE,\n  DOCUMENT_FRAGMENT,\n  ELEMENT_NODE,\n  PART_MARKER,\n  TEXT_NODE\n} from \"./common\";\nimport { IDirective } from \"./directives\";\nimport { ITemplateGenerator, Part, Template } from \"./ulit\";\n\nexport function isNode(x: any): x is Node {\n  return (x as Node) && (x as Node).nodeType > 0;\n}\n\nexport function isElementNode(x: any): x is HTMLElement {\n  return isNode(x) && (x as Node).nodeType === ELEMENT_NODE;\n}\n\nexport function isDirective(x: any): x is IDirective {\n  return isFunction(x) && x.kind === DIRECTIVE;\n}\n\nexport function isDocumentFragment(x: any): x is DocumentFragment {\n  return isNode(x) && (x as Node).nodeType === DOCUMENT_FRAGMENT;\n}\n\nexport function isComment(x: any): x is Comment {\n  return isNode(x) && (x as Node).nodeType === COMMENT_NODE;\n}\n\nexport function isFunction(x: any): x is Function {\n  return typeof x === \"function\";\n}\n\nexport function isString(x: any): x is string {\n  return typeof x === \"string\";\n}\n\nexport function isText(x: any): x is Text {\n  return x && isNode(x) && (x as Node).nodeType === TEXT_NODE;\n}\n\nexport function isNumber(x: any): x is number {\n  return typeof x === \"number\";\n}\n\nexport function isIterable(x: any): x is Iterable<any> {\n  return (\n    !isString(x) && !Array.isArray(x) && isFunction((x as any)[Symbol.iterator])\n  );\n}\n\nexport function isPartComment(x: any): x is Comment {\n  return isComment(x) && x.textContent === PART_MARKER;\n}\n\nexport function isPromise(x: any): x is Promise<any> {\n  return x && isFunction(x.then);\n}\n\nexport function isTemplate(x: any): x is Template {\n  return x && x instanceof Template;\n}\n\nexport function isTemplateElement(x: any): x is HTMLTemplateElement {\n  return x && x instanceof HTMLTemplateElement;\n}\n\nexport function isTemplateGenerator(x: any): x is ITemplateGenerator {\n  return isFunction(x) && x.id;\n}\n\nexport function isPart(x: any): x is Part {\n  return x && x instanceof Part;\n}\n\nexport function isAttributePart(x: any) {\n  if (isPart(x) && isString(x.path[x.path.length - 1])) {\n    return true;\n  }\n  return false;\n}\n\nexport function isEventPart(x: any) {\n  if (isAttributePart(x) && x.path[x.path.length - 1].startsWith(\"on\")) {\n    return true;\n  }\n  return false;\n}\n","import { fail, Optional } from \"./common\";\nimport { isNode } from \"./predicates\";\nimport { Part } from \"./ulit\";\n\nexport class DomTarget {\n  public start: Optional<Node | Part> = undefined;\n  public end: Optional<Node | Part> = undefined;\n  constructor(target?: Node, public isSVG: boolean = false) {\n    if (target) {\n      this.start = target;\n      this.end = target;\n    }\n  }\n  public first(): Node {\n    const start = this.start;\n    if (!start || !this.end) {\n      fail();\n    }\n    if (isNode(start)) {\n      return start;\n    } else {\n      return (start as Part).target.first();\n    }\n  }\n  public last(): Node {\n    const end = this.end;\n    if (!end || !this.start) {\n      fail();\n    }\n    if (isNode(end)) {\n      return end;\n    } else {\n      return (end as Part).target.last();\n    }\n  }\n  public remove(): DocumentFragment {\n    if (!this.start || !this.end) {\n      fail();\n    }\n    const fragment = document.createDocumentFragment();\n    const last = this.last();\n    let cursor: Optional<Node> = this.first();\n    while (cursor != null) {\n      const next: Node = cursor.nextSibling as Node;\n      fragment.appendChild(cursor);\n      cursor = cursor === last || !next ? undefined : next;\n    }\n    return fragment;\n  }\n}\n"]}